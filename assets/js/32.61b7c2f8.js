(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{390:function(r,a,t){"use strict";t.r(a);var e=t(41),v=Object(e.a)({},(function(){var r=this,a=r.$createElement,t=r._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[t("h2",{attrs:{id:"arraybuffer"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#arraybuffer"}},[r._v("#")]),r._v(" ArrayBuffer")]),r._v(" "),t("p",[t("code",[r._v("ArrayBuffer")]),r._v("对象，TypedArry视图和DateView视图是javascript操作二进制的一个接口，这些对象早就存在，属于独立规格(2011年2月发布)，ES6将它们纳入了ECMAScript规格，并且增加了新的方法，他们都是以数组的语法处理二进制数据，所以统称为二进制数组。\n这个接口的原始设计目的，与webGL项目有关。所谓WebGL，就是指浏览器与显卡之间的通信接口，为了满足JavaScript与显卡之间大量的，实时的数据交换，他们之间的数据通信必须是二进制的，而不是传统的文本格式，文本格式传递一个32为整数，两端的javascript脚本都要进行格式转换，将非常耗时，这时要是存在一种机制，可以像C语言那样，直接操作字节，将4个字节的32位整数，以二进制形式原封不动地送入显卡，脚本的性能就会大幅提升。\n二进制数组就是在这种背景下诞生的，它很像C语言的数组允许开发者以数组下标的形式，直接操作内存，大大增加leJavaScript处理二进制数据的能力，使得开发者有可能通过JavaScript与操作系统的原生接口进行二进制通信。\n二进制数组由3类对象组成")]),r._v(" "),t("ul",[t("li",[r._v("(ArrayBuffer)对象：代表内存之中的一段二进制数据，可以通过视图进行操作，视图部署了数组接口，这意味着，可以用数组的方法操作内存。")]),r._v(" "),t("li",[t("code",[r._v("TypedArray")]),r._v("视图：共包括9中类型的视图，比如"),t("code",[r._v("Unit8Array")]),r._v("(无符号8位整数)数组视图（16位整数）数组视图，"),t("code",[r._v("Float32Array")]),r._v("(32位浮点数)数组视图等等。")]),r._v(" "),t("li",[t("code",[r._v("DataView")]),r._v("视图：可以自定义复合格式的视图，比如第一个字节是Unit8(无符号)")])])])}),[],!1,null,null,null);a.default=v.exports}}]);