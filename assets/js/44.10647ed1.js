(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{406:function(t,a,s){"use strict";s.r(a);var e=s(41),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"变量-作用域与内存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量-作用域与内存"}},[t._v("#")]),t._v(" 变量，作用域与内存")]),t._v(" "),s("ul",[s("li",[t._v("原始值 Undefined Null Boolean Number String Symbol")])]),t._v(" "),s("h4",{attrs:{id:"复制值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#复制值"}},[t._v("#")]),t._v(" 复制值")]),t._v(" "),s("h4",{attrs:{id:"确定类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#确定类型"}},[t._v("#")]),t._v(" 确定类型")]),t._v(" "),s("p",[t._v("按照定义，所有引用值都是Object的实例，因此通过instanceof操作符检测任何引用值和Object构造函数都会返回true。类似地，如果用instanceof检测原始值，则始终会返回false，因为原始值不是对象")]),t._v(" "),s("h4",{attrs:{id:"执行上下文与作用域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#执行上下文与作用域"}},[t._v("#")]),t._v(" 执行上下文与作用域")]),t._v(" "),s("p",[t._v("每个函数调用都有自己的上下文。当代码执行流进入函数时，函数的上下文被推到一个上下文栈上。\n在函数执行完之后，上下文栈会弹出该函数上下文，将控制权返还给之前的执行上下文。ECMAScript\n程序的执行流就是通过这个上下文栈进行控制的。")]),t._v(" "),s("h4",{attrs:{id:"const"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#const"}},[t._v("#")]),t._v(" const")]),t._v(" "),s("p",[t._v("如果想让整个对象都不能修改，可以使用Object.freeze()这样再给属性赋值时虽然不会报错，但会静默失败:")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("const o3 = Object.freeze({})\no3.name = 'Jake'\nconsole.log(o3)\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("h3",{attrs:{id:"垃圾回收"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#垃圾回收"}},[t._v("#")]),t._v(" 垃圾回收")]),t._v(" "),s("h4",{attrs:{id:"内存管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内存管理"}},[t._v("#")]),t._v(" 内存管理")]),t._v(" "),s("ol",[s("li",[t._v("通过const和let声明提升性能")])])])}),[],!1,null,null,null);a.default=r.exports}}]);