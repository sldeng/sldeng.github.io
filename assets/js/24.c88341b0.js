(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{384:function(n,s,a){"use strict";a.r(s);var t=a(41),e=Object(t.a)({},(function(){var n=this,s=n.$createElement,a=n._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[a("h2",{attrs:{id:"javascript设计模式的开发与实践"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript设计模式的开发与实践"}},[n._v("#")]),n._v(" javaScript设计模式的开发与实践")]),n._v(" "),a("h3",{attrs:{id:"_1-基础"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-基础"}},[n._v("#")]),n._v(" 1.基础")]),n._v(" "),a("ul",[a("li",[n._v("1.1 多态")])]),n._v(" "),a("blockquote",[a("p",[n._v("多态的实际含义是:同一个操作作用于不同的对象上面，可以产生不同的解释和不同的执行结果。换句话说，给不同的对象发送同一个消息的时候，这些对象会根据这个消息分别给出不同的反馈。")])]),n._v(" "),a("ul",[a("li",[n._v("1.2 对象的多态性")])]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("var makeSound = function(animal){\n    animal.sound()\n}\n然后把可变的部分封装起来，我们刚才谈到的多态性实际上指的是对象的多态性：\nvar Duck = function(){}\nDuck.prototype.sound = function(){console.log('嘎嘎嘎嘎')}\nvar Chicken = function(){}\nChicken.prototype.sound = function(){console.log('咯咯咯)}\nmakeSound(new Duck());\nmakeSound(new Chicken())\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br")])]),a("ul",[a("li",[n._v("1.3封装\n封装的目的是奖信息隐藏，一般而言。我们讨论的封装是封装数据和封装实现。这一节奖讨论更广义的封装，不仅封装数据和封装的实现，还包括封装类型和封装变化。")])]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("\nvar myObject = (function(){\n    var _name = 'sven';\n    return {\n        getName:function(){\n            return _name;\n        }\n    }\n})()\nconsole.log(myObject.getName);\nconsole.log(myObject._name)\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br")])]),a("h3",{attrs:{id:"_2-1-this-call-和apply"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-this-call-和apply"}},[n._v("#")]),n._v(" 2.1 this,call,和apply")]),n._v(" "),a("h4",{attrs:{id:"_2-1-1-this-的指向"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-1-this-的指向"}},[n._v("#")]),n._v(" 2.1.1 this 的指向")]),n._v(" "),a("p",[n._v("除去不常用的with和eval的情况，具体到实际应用中，this的指向大致可以分为以下4种。\n作为对象的方法调用。\n作为普通函数调用。\n构造器调用。\nFunction.prototype.call或Function.prototype.apply调用。")]),n._v(" "),a("ol",[a("li",[n._v("作为对象方法的调用\n当函数作为对象的方法被调用时，this指向该对象：")])]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v(" var obj = {\n    a:1,\n    getA:function(){\n      console.log(this ===obj)\n      console.log(this.a)\n    }\n  }\n  obj.getA()\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br")])]),a("p",[n._v("2.作为普通函数调用\n当函数不作为对象的属性被调用时，也就是我们常说的普通函数方式，此时的this总是指向全局对象，在浏览器的JavaScript里，这个全局对象时window对象。")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v(" window.name = 'globalName';\n  var myObject = {\n    name:'sven',\n    getName:function(){\n      console.log( this.name)\n    }\n  }\n  myObject.getName() //window\n\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br")])]),a("blockquote",[a("p",[n._v("在EcmaScript5的strict模式下，这种情况下的this已经被规定为不会指向全局对象，而是undefined:")])]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v(' function func(){\n    "use strict"\n    console.log(this)\n  }\n  func() //undefined\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br")])]),a("ol",{attrs:{start:"3"}},[a("li",[n._v("构造器调用\nJavaScript中没有类，但是可以从构造器中创建对象，同时也提供了new 运算符，使得构造器看起来像个类。\n除了宿主提供的一些内置函数，大部分JavaScript函数都可以当作构造器使用。构造器的外表跟普通函数一模一样。他们的区别在于被调用的方式。当用new运算符调用函数时，该函数总会返回一个对象，通常情况下，构造器里的this就指向返回的这个对象，见如下代码:")])]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("var MyClass = function(){\n    this.name = 'sven'\n  }\n  var obj = new MyClass();\n  console.log(obj.name)\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br")])]),a("ol",{attrs:{start:"4"}},[a("li",[n._v("Function.prototype.call或Function.prototype.apply调用\n跟普通的函数调用相比，用Function.prototype.call或Function.prototype.apply可以动态地改变传入函数的this:")])]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("  var obj1 = {\n    name:'sven',\n    getName:function(){\n      return this.name;\n    }\n  }\n  var obj2 = {\n    name:'anne'\n  }\n  console.log(obj1.getName())\n  console.log(obj1.getName.call(obj2)) //输出：anne\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br")])]),a("h4",{attrs:{id:"_2-1-2丢失的this"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-2丢失的this"}},[n._v("#")]),n._v(" 2.1.2丢失的this")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("  document.getElementById = (function(func){\n    return function(){\n      return func.apply(document,arguments)\n    }\n  })(document.getElementById)\n  var getId = document.getElementById;\n  var div = getId('div1')\n  console.l\n  og(div.id)\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br")])]),a("h3",{attrs:{id:"_2-2call和apply"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2call和apply"}},[n._v("#")]),n._v(" 2.2call和apply")]),n._v(" "),a("p",[n._v("ECAMSCRIPT3给Function的原型定义了两个方法，他们时")])])}),[],!1,null,null,null);s.default=e.exports}}]);