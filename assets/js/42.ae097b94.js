(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{402:function(s,a,t){"use strict";t.r(a);var r=t(41),e=Object(r.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"_2-1-script元素"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-script元素"}},[s._v("#")]),s._v(" 2.1 script元素")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[s._v("将Javascript插入HTML的主要方法是使用<script>元素，这个元素是由网景公司创造出来，最早在Netscape Navigator 2中实现的，后来这个元素被正式加入HTML规范中，其包括八个属性\n")])])]),t("ul",[t("li",[s._v("asyn：可选。表示应该立即开始下载脚本。但不能阻止其他页面动作。比如下载资源或等待其他脚本加载。只对外部脚本文件有效。")]),s._v(" "),t("li",[s._v("charset: 可选，使用src属性指定的代码字符集，这个属性很少使用，因为大多数浏览器不在乎他的值。")]),s._v(" "),t("li",[s._v('crosssorigin：可选。配置相关请求的CORS（跨域资源共享）设置。默认不使用CORS。crossorigin="anonymous"配置文件请求不必设置凭据标值。crossorigin="use-credentials"设置凭据标志，意味着出战请求包含凭据。')]),s._v(" "),t("li",[s._v("defer：可选。表示脚本可以延迟到文档完全被解析完全被解析和显示之后在执行。只对外部脚本文件有效。在IE7及更早的版本中，对行内脚本也可以指定这个属性。")]),s._v(" "),t("li",[s._v("integrity：允许比对接收到的资源和指定的加密签名以验证子资源完整性（SRI,Subresoure Integrity）。如果接收到的资源的签名与这个属性指定的签名不匹配，则页面会报错，脚本不会执行，这个属性可以用于确保内容分发网络(CDN)，不会提供恶意内容。")]),s._v(" "),t("li",[s._v("language：废弃。最初用于表示代码块中的语言脚本。大多数浏览器都会忽略这个属性，不应该在使用它。")]),s._v(" "),t("li",[s._v("src：可选。表示包含要执行的代码的外部内容。")]),s._v(" "),t("li",[s._v("type ：可选。代替language，表示代码块中脚本语言的内容类型（也称MIME类型）。")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("<script>\n    function sayScript(){\n        console.log('fuck month surprise')\n    }\n<\/script>\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("h3",{attrs:{id:"_2-1-1推迟执行脚本"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-1推迟执行脚本"}},[s._v("#")]),s._v(" 2.1.1推迟执行脚本")]),s._v(" "),t("ul",[t("li",[s._v("defer这个属性表示脚本在执行的时候不会改变页面的结构，也就是说，脚本会被延迟到整个页面都解析完毕后在运行。因此，  "),t("code",[s._v("<\\script>")]),s._v("元素上这hi在defer属性，相当于高数浏览器立即下载，但延迟执行。")])]),s._v(" "),t("h3",{attrs:{id:"_2-1-3-异步执行脚本"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-3-异步执行脚本"}},[s._v("#")]),s._v(" 2.1.3 异步执行脚本")]),s._v(" "),t("ul",[t("li",[s._v("async 该属性与defer类似，当然，它们两者也都只适用与外部脚本。都会告诉浏览器立即开始下载。不过，与defer不同的是，标记为async的脚本并不保证能按照他们出现的次序执行。")])]),s._v(" "),t("h3",{attrs:{id:"_2-1-4-动态加载脚本"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-4-动态加载脚本"}},[s._v("#")]),s._v(" 2.1.4 动态加载脚本")]),s._v(" "),t("p",[s._v("除了"),t("code",[s._v("<script>")]),s._v("标签，还有其他方式可以加载脚本。因为JavaScript可以使用DOM API，所以通过想DOM中动态添加"),t("code",[s._v("script")]),s._v("元素同样可以加载指定的脚本。只要创建一个script元素并将其加到DOM即可。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("let script = document.createElement('script');\nscript.src = 'test.js';\ndocument.head.appendChild(script)\n\n<link rel=\"preload\" href=\"gibberish.js\"> 设置preload属性 可以让预加载器知道这些是动态请求的文件\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("h2",{attrs:{id:"_2-2-行内代码与外部文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-行内代码与外部文件"}},[s._v("#")]),s._v(" 2.2 行内代码与外部文件")]),s._v(" "),t("p",[s._v("虽然可以直接在HTML文件嵌入JavaScript代码，但通常认为是最佳实践是尽可能将Javascript代码放在外部头部文件中。不过这个是最佳实践并不是明确的强制性规则。推荐使用外部文件的理由如下，")]),s._v(" "),t("ul",[t("li",[s._v("可维护性。JavaScript代码如果分散到很多HTML页面，会导致维护困难。而用一个目录保存所以JavaScript文件，则更容易维护，这样开发者就可以独立与使用他们的html页面来编辑代码。")]),s._v(" "),t("li",[s._v("缓存。浏览器会根据特定的设置缓存所有外部链接的Javascript文件，则更容易维护，这样开发者就可以独立于使用他们的HTML页面来编辑代码。")]),s._v(" "),t("li",[s._v("适应未来。通过把JavaScript放到外部文件中，就不要考虑JavaScript文件的语法在html和Xhtml中是一样的")])]),s._v(" "),t("h2",{attrs:{id:"_2-3文档模式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-3文档模式"}},[s._v("#")]),s._v(" 2.3文档模式")]),s._v(" "),t("p",[s._v("ie5.5发明了文档模式的概念，既可以使用doctype切换文档模式，最初的文档模式有两种:混杂模式（quirks mode）和标准模式（standards mode）。前者让IE像IE5一样支持一些非标准的特性。后者让ie具有兼容标准的欣慰。虽然两种模式的主要区别只体现子啊通过css渲染的内容方面，但对JavaScript也有一些关联影响，或称作副作用。准标准模式。这种模式下的浏览器支持很多标准的特性，但是没有标准规定的那么严格。主要区别在于如何对待图片元素周围的空白（在表格中使用图片时最明显）。")]),s._v(" "),t("h2",{attrs:{id:"_2-4元素"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-4元素"}},[s._v("#")]),s._v(" 2.4"),t("noscript",[s._v("元素")])]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[s._v("针对早期浏览器不支持JavaScript的问题，需要以恶搞页面优雅降级的处理方案。最终，<noscript>元素出现，被用于给不支持Javascript的浏览器提供可替代内容，虽然如今的浏览器已经100%支持JavaScript，但对于禁用Javascript的浏览器来说，这个元素任然有他的用处，\n    <noscript>元素可以包含任何出现在<body>中的HTML元素，<script>除外，在下列两种情况下，浏览器将显示包含在<noscript>中的内容。\n")])])]),t("ul",[t("li",[s._v("浏览器不支持脚本")]),s._v(" "),t("li",[s._v("浏览器对脚本的支持被关闭\n任何一个条件满足，包含在"),t("noscript",[s._v("中的内容就会被渲染。否则，浏览器不会渲染"),t("noscript",[s._v("中的内容。")])])])])])}),[],!1,null,null,null);a.default=e.exports}}]);