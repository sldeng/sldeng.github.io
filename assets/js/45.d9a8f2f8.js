(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{399:function(e,t,l){"use strict";l.r(t);var v=l(41),s=Object(v.a)({},(function(){var e=this,t=e.$createElement,l=e._self._c||t;return l("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[l("h2",{attrs:{id:"基本引用类型"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#基本引用类型"}},[e._v("#")]),e._v(" 基本引用类型")]),e._v(" "),l("ol",[l("li",[e._v("Date\n1.1 日期格式化方法")])]),e._v(" "),l("ul",[l("li",[e._v("toDateString()显示日期中的周几，月，日，年(格式特定于实现);")]),e._v(" "),l("li",[e._v("toTimeString()显示日期中的时、分、秒和时区（格式特定于实现）；")]),e._v(" "),l("li",[e._v("toLocaleDateString()显示日期中的周几、月、日、年（格式特定于实现和地区）；")]),e._v(" "),l("li",[e._v("toLocaleTimeString()显示日期中的时、分、秒（格式特定于实现和地区）")]),e._v(" "),l("li",[e._v("toUTCString()显示完整的 UTC 日期（格式特定于实现）。")]),e._v(" "),l("li",[e._v("1.2 日期/时间组件方法")]),e._v(" "),l("li",[e._v("getTime() 返回日期的毫秒表示；与 valueOf()相同")]),e._v(" "),l("li",[e._v("setTime(milliseconds) 设置日期的毫秒表示，从而修改整个日期")]),e._v(" "),l("li",[e._v("getFullYear() 返回 4 位数年（即 2019 而不是 19）")]),e._v(" "),l("li",[e._v("getUTCFullYear() 返回 UTC 日期的 4 位数年")]),e._v(" "),l("li",[e._v("setFullYear(year) 设置日期的年（year 必须是 4 位数）")]),e._v(" "),l("li",[e._v("setUTCFullYear(year) 设置 UTC 日期的年（year 必须是 4 位数）")]),e._v(" "),l("li",[e._v("getMonth() 返回日期的月（0 表示 1 月，11 表示 12 月）")]),e._v(" "),l("li",[e._v("getUTCMonth() 返回 UTC 日期的月（0 表示 1 月，11 表示 12 月）")]),e._v(" "),l("li",[e._v("setMonth(month) 设置日期的月（month 为大于 0 的数值，大于 11 加年）")]),e._v(" "),l("li",[e._v("setUTCMonth(month) 设置 UTC 日期的月（month 为大于 0 的数值，大于 11 加年）")]),e._v(" "),l("li",[e._v("getDate() 返回日期中的日（1~31）")]),e._v(" "),l("li",[e._v("getUTCDate() 返回 UTC 日期中的日（1~31）")]),e._v(" "),l("li",[e._v("setDate(date) 设置日期中的日（如果 date 大于该月天数，则加月）")]),e._v(" "),l("li",[e._v("setUTCDate(date) 设置 UTC 日期中的日（如果 date 大于该月天数，则加月）")]),e._v(" "),l("li",[e._v("getDay() 返回日期中表示周几的数值（0 表示周日，6 表示周六）")]),e._v(" "),l("li",[e._v("getUTCDay() 返回 UTC 日期中表示周几的数值（0 表示周日，6 表示周六）")]),e._v(" "),l("li",[e._v("getHours() 返回日期中的时（0~23）")]),e._v(" "),l("li",[e._v("getUTCHours() 返回 UTC 日期中的时（0~23）")]),e._v(" "),l("li",[e._v("setHours(hours) 设置日期中的时（如果 hours 大于 23，则加日）")]),e._v(" "),l("li",[e._v("setUTCHours(hours) 设置 UTC 日期中的时（如果 hours 大于 23，则加日）")]),e._v(" "),l("li",[e._v("getMinutes() 返回日期中的分（0~59）")]),e._v(" "),l("li",[e._v("getUTCMinutes() 返回 UTC 日期中的分（0~59）")]),e._v(" "),l("li",[e._v("setMinutes(minutes) 设置日期中的分（如果 minutes 大于 59，则加时）")]),e._v(" "),l("li",[e._v("setUTCMinutes(minutes) 设置 UTC 日期中的分（如果 minutes 大于 59，则加时）")]),e._v(" "),l("li",[e._v("getSeconds() 返回日期中的秒（0~59）")]),e._v(" "),l("li",[e._v("getUTCSeconds() 返回 UTC 日期中的秒（0~59）")]),e._v(" "),l("li",[e._v("setSeconds(seconds) 设置日期中的秒（如果 seconds 大于 59，则加分）")]),e._v(" "),l("li",[e._v("setUTCSeconds(seconds) 设置 UTC 日期中的秒（如果 seconds 大于 59，则加分）")]),e._v(" "),l("li",[e._v("getMilliseconds() 返回日期中的毫秒")]),e._v(" "),l("li",[e._v("getUTCMilliseconds() 返回 UTC 日期中的毫秒")]),e._v(" "),l("li",[e._v("setMilliseconds(milliseconds) 设置日期中的毫秒")]),e._v(" "),l("li",[e._v("setUTCMilliseconds(milliseconds) 设置 UTC 日期中的毫秒")]),e._v(" "),l("li",[e._v("getTimezoneOffset() 返回以分钟计的 UTC 与本地时区的偏移量（如美国 EST 即“东部标准时间”\n返回 300，进入夏令时的地区可能有所差异）")])]),e._v(" "),l("h3",{attrs:{id:"number"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#number"}},[e._v("#")]),e._v(" Number")]),e._v(" "),l("p",[e._v("isInteger()方法与安全整数")]),e._v(" "),l("div",{staticClass:"language- line-numbers-mode"},[l("pre",{pre:!0,attrs:{class:"language-text"}},[l("code",[e._v("console.log(Number.isInteger(1)); // true \nconsole.log(Number.isInteger(1.00)); // true \nconsole.log(Number.isInteger(1.01)); // false\n\n")])]),e._v(" "),l("div",{staticClass:"line-numbers-wrapper"},[l("span",{staticClass:"line-number"},[e._v("1")]),l("br"),l("span",{staticClass:"line-number"},[e._v("2")]),l("br"),l("span",{staticClass:"line-number"},[e._v("3")]),l("br"),l("span",{staticClass:"line-number"},[e._v("4")]),l("br")])]),l("h3",{attrs:{id:"string"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#string"}},[e._v("#")]),e._v(" String")]),e._v(" "),l("p",[e._v("JavaScript 字符串由 16 位码元（code unit）组成。\n字符串操作方法")]),e._v(" "),l("ul",[l("li",[e._v("concat()")]),e._v(" "),l("li",[e._v("repeat()方法\n这个方法接收一个整数参数，表示要将字符串复制多少次，然后返回拼接所有副本后的结果。")]),e._v(" "),l("li",[e._v("localeCompare")])]),e._v(" "),l("ol",[l("li",[e._v("如果按照字母表顺序，字符串应该排在字符串参数前头，则返回负责。")])]),e._v(" "),l("h3",{attrs:{id:"单例内置对象"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#单例内置对象"}},[e._v("#")]),e._v(" 单例内置对象")]),e._v(" "),l("h4",{attrs:{id:"global"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#global"}},[e._v("#")]),e._v(" Global")]),e._v(" "),l("ol",[l("li",[e._v("URL编码方法\nencodeURL()和encodeURLComponent()方法用于编码同意资源标识符，以便传给浏览器。有效的URL不能包含某些字符，比如空格。使用URL编码方法编码URL可以让浏览器能够理解他们，同时又以特殊的UTF-8编码替换掉所有无效字符。")])]),e._v(" "),l("ul",[l("li",[e._v("encodeURL()")]),e._v(" "),l("li",[e._v("encodeURLComponent()\n区别：encodeURL()不会编码属于URL组件的特殊字符，比如冒号，斜杠，问号，井号，而encodeURLComponent()会编码它发现的所有非标准字符都替换成相应的编码形式，这就是使用encodeUrl()编码整个URL,但只使用encodeURLComponent()编码那些会追加到已有URL后面的字符串的原因，\n"),l("code",[e._v("与 encodeURI()和 encodeURIComponent()相对的是 decodeURI()和 decodeURIComponent()。")])])]),e._v(" "),l("ol",{attrs:{start:"2"}},[l("li",[l("p",[e._v("eval()")])]),e._v(" "),l("li",[l("p",[e._v("window\n"),l("code",[e._v("let global = function() { return this; }();")])])]),e._v(" "),l("li",[l("p",[e._v("Math\nMath.max();Math.min();")])])]),e._v(" "),l("ul",[l("li",[e._v("舍入方法")])]),e._v(" "),l("ul",[l("li",[e._v("Math.ceil() 方法始终向上舍入为最接近的整数")]),e._v(" "),l("li",[e._v("Math.fround()方法返回数值最接近的单精度（32 位）浮点值表示")])])])}),[],!1,null,null,null);t.default=s.exports}}]);